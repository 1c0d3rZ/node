{"ast":null,"code":"var _jsxFileName = \"/Users/imacg1/Desktop/mern/client/src/components/edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level\n    }; // This will send a post request to update the data in the database.\n\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"position\",\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"position\",\n          value: form.position,\n          onChange: e => updateForm({\n            position: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"positionIntern\",\n          children: \"Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"level\",\n          value: form.level,\n          onChange: e => updateForm({\n            level: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"positionIntern\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"number\",\n          value: form.number,\n          onChange: e => updateForm({\n            number: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Edit, \"rG6iPGutTY30vlo3g4ZqJS4HUcw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Edit","form","setForm","name","position","level","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedPerson","method","body","JSON","stringify","headers","target","number"],"sources":["/Users/imacg1/Desktop/mern/client/src/components/edit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n \nexport default function Edit() {\n const [form, setForm] = useState({\n   name: \"\",\n   position: \"\",\n   level: \"\",\n   \n   records: [],\n });\n const params = useParams();\n const navigate = useNavigate();\n \n useEffect(() => {\n   async function fetchData() {\n     const id = params.id.toString();\n     const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n \n     if (!response.ok) {\n       const message = `An error has occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const record = await response.json();\n     if (!record) {\n       window.alert(`Record with id ${id} not found`);\n       navigate(\"/\");\n       return;\n     }\n \n     setForm(record);\n   }\n \n   fetchData();\n \n   return;\n }, [params.id, navigate]);\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n async function onSubmit(e) {\n   e.preventDefault();\n   const editedPerson = {\n     name: form.name,\n     position: form.position,\n     level: form.level,\n   };\n \n   // This will send a post request to update the data in the database.\n   await fetch(`http://localhost:5000/update/${params.id}`, {\n     method: \"POST\",\n     body: JSON.stringify(editedPerson),\n     headers: {\n       'Content-Type': 'application/json'\n     },\n   });\n \n   navigate(\"/\");\n }\n \n // This following section will display the form that takes input from the user to update the data.\n return (\n   <div>\n     <h3>Update Record</h3>\n     <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">        \n            <label htmlFor=\"positionIntern\">Level</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"level\"\n              value={form.level}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n        </div>\n        <div className=\"form-group\">        \n            <label htmlFor=\"positionIntern\">Number</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"number\"\n              value={form.number}\n              onChange={(e) => updateForm({ number: e.target.value })}\n            />\n        </div>\n        <div className=\"form-group mt-2\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n   </div>\n );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}