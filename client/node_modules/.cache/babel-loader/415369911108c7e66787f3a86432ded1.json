{"ast":null,"code":"var _jsxFileName = \"/Users/imacg1/Desktop/mern/client/src/components/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    number: ''\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      position: \"\",\n      level: \"\",\n      number: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"position\",\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"position\",\n          value: form.position,\n          onChange: e => updateForm({\n            position: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"positionIntern\",\n          children: \"Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"level\",\n          value: form.level,\n          onChange: e => updateForm({\n            level: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"positionIntern\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"number\",\n          value: form.number,\n          onChange: e => updateForm({\n            number: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"ln1BVKV8B4uZFxhp4vq1AMCVwos=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","Create","form","setForm","name","position","level","number","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"sources":["/Users/imacg1/Desktop/mern/client/src/components/create.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    number: '',\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n      .catch(error => {\n        window.alert(error);\n        return;\n      });\n\n    setForm({ name: \"\", position: \"\", level: \"\", number: \"\"});\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">        \n            <label htmlFor=\"positionIntern\">Level</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"level\"\n              value={form.level}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n        </div>\n        <div className=\"form-group\">        \n            <label htmlFor=\"positionIntern\">Number</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"number\"\n              value={form.number}\n              onChange={(e) => updateForm({ number: e.target.value })}\n            />\n        </div>\n        <div className=\"form-group mt-2\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC/B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAC/BK,IAAI,EAAE,EADyB;IAE/BC,QAAQ,EAAE,EAFqB;IAG/BC,KAAK,EAAE,EAHwB;IAI/BC,MAAM,EAAE;EAJuB,CAAD,CAAhC;EAMA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAP+B,CAS/B;;EACA,SAASS,UAAT,CAAoBC,KAApB,EAA2B;IACzB,OAAOP,OAAO,CAAEQ,IAAD,IAAU;MACvB,OAAO,EAAE,GAAGA,IAAL;QAAW,GAAGD;MAAd,CAAP;IACD,CAFa,CAAd;EAGD,CAd8B,CAgB/B;;;EACA,eAAeE,QAAf,CAAwBC,CAAxB,EAA2B;IACzBA,CAAC,CAACC,cAAF,GADyB,CAGzB;;IACA,MAAMC,SAAS,GAAG,EAAE,GAAGb;IAAL,CAAlB;IAEA,MAAMc,KAAK,CAAC,kCAAD,EAAqC;MAC9CC,MAAM,EAAE,MADsC;MAE9CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFqC;MAK9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf;IALwC,CAArC,CAAL,CAOHO,KAPG,CAOGC,KAAK,IAAI;MACdC,MAAM,CAACC,KAAP,CAAaF,KAAb;MACA;IACD,CAVG,CAAN;IAYApB,OAAO,CAAC;MAAEC,IAAI,EAAE,EAAR;MAAYC,QAAQ,EAAE,EAAtB;MAA0BC,KAAK,EAAE,EAAjC;MAAqCC,MAAM,EAAE;IAA7C,CAAD,CAAP;IACAC,QAAQ,CAAC,GAAD,CAAR;EACD,CArC8B,CAuC/B;;;EACA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEI,QAAhB;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,cAFZ;UAGE,EAAE,EAAC,MAHL;UAIE,KAAK,EAAEV,IAAI,CAACE,IAJd;UAKE,QAAQ,EAAGS,CAAD,IAAOJ,UAAU,CAAC;YAAEL,IAAI,EAAES,CAAC,CAACa,MAAF,CAAShB;UAAjB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAWE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,cAFZ;UAGE,EAAE,EAAC,UAHL;UAIE,KAAK,EAAER,IAAI,CAACG,QAJd;UAKE,QAAQ,EAAGQ,CAAD,IAAOJ,UAAU,CAAC;YAAEJ,QAAQ,EAAEQ,CAAC,CAACa,MAAF,CAAShB;UAArB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAqBE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACI;UAAO,OAAO,EAAC,gBAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,cAFZ;UAGE,EAAE,EAAC,OAHL;UAIE,KAAK,EAAER,IAAI,CAACI,KAJd;UAKE,QAAQ,EAAGO,CAAD,IAAOJ,UAAU,CAAC;YAAEH,KAAK,EAAEO,CAAC,CAACa,MAAF,CAAShB;UAAlB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF,eA+BE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACI;UAAO,OAAO,EAAC,gBAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,cAFZ;UAGE,EAAE,EAAC,QAHL;UAIE,KAAK,EAAER,IAAI,CAACK,MAJd;UAKE,QAAQ,EAAGM,CAAD,IAAOJ,UAAU,CAAC;YAAEF,MAAM,EAAEM,CAAC,CAACa,MAAF,CAAShB;UAAnB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA/BF,eAyCE;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACE;UACE,IAAI,EAAC,QADP;UAEE,KAAK,EAAC,eAFR;UAGE,SAAS,EAAC;QAHZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAzCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsDD;;GA9FuBT,M;UAOLD,W;;;KAPKC,M"},"metadata":{},"sourceType":"module"}